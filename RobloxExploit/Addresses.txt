#pragma once
#include <Windows.h>
DWORD ADDYatpanic = 0x11CE460  ;
DWORD ADDYcall = 0x11CE480  ;
DWORD ADDYcheckstack = 0x11CE4F0  ;
DWORD ADDYclose = 0x11DAC60  ;
DWORD ADDYconcat = 0x5523E0  ; //Potentially Wrong
DWORD ADDYcreatetable = 0x11CE640  ; //Potentially Wrong
DWORD ADDYerror = 0x11CE6C0  ;
DWORD ADDYgc = 0x548FC0  ; //Potentially Wrong
DWORD ADDYgetfenv = 0x645820  ; //Potentially Wrong
DWORD ADDYgetfield = 0x11CE870  ; //Potentially Wrong
DWORD ADDYgethook = 0x11CE910  ;
DWORD ADDYgetinfo = 0x11DB4E0  ;
DWORD ADDYgetlocal = 0x11DB720  ;
DWORD ADDYgetmetatable = 0x11CE910  ; //Potentially Wrong
DWORD ADDYgetstack = 0x11DB7E0  ;
DWORD ADDYgettable = 0x654E60  ; //Potentially Wrong
DWORD ADDYgettop = 0x11CEA40  ; //Potentially Wrong
DWORD ADDYgetupvalue = 0x11CEA60  ;
DWORD ADDYinsert = 0x11CEAF0  ;
DWORD ADDYiscfunction = 0x67FCE0  ; //Potentially Wrong
DWORD ADDYisstring = 0x11CEC10  ; //Potentially Wrong
DWORD ADDYisnumber = 0x680000  ; //Potentially Wrong
DWORD ADDYnewstate = 0x7D4C80  ; //Potentially Wrong
DWORD ADDYnewthread = 0x11CEDC0  ; //Potentially Wrong
DWORD ADDYnewuserdata = 0xB430D0  ; //Potentially Wrong
DWORD ADDYnext = 0x6800F0  ; //Potentially Wrong
DWORD ADDYobjlen = 0x11CEF60  ; //Potentially Wrong
DWORD ADDYpcall = 0x11CF040  ;
DWORD ADDYpushboolean = 0x11CF100  ;
DWORD ADDYpushcclosure = 0x11CF150  ;
DWORD ADDYpushfstring = 0x11CF220  ;
DWORD ADDYpushinteger = 0x11CF290  ;
DWORD ADDYpushlightuserdata = 0x11CF2F0  ;
DWORD ADDYpushlstring = 0x11CF340  ;
DWORD ADDYpushnil = 0x11CF3C0  ;
DWORD ADDYpushnumber = 0x11CF410  ;
DWORD ADDYpushstring = 0x11CF470  ;
DWORD ADDYpushthread = 0x11CE4F0  ; //Potentially Wrong
DWORD ADDYpushvalue = 0x11CF620  ;
DWORD ADDYpushvfstring = 0xEFDE10  ; //Potentially Wrong
DWORD ADDYrawequal = 0x11D0A90  ; //Potentially Wrong
DWORD ADDYrawget = 0x11CF780  ; //Potentially Wrong
DWORD ADDYrawgeti = 0x11CF8A0  ;
DWORD ADDYrawset = 0x11CF920  ;
DWORD ADDYrawseti = 0x11CF9F0  ;
DWORD ADDYremove = 0x11CF470  ; //Potentially Wrong
DWORD ADDYreplace = 0x6A46C0  ; //Potentially Wrong
DWORD ADDYresume = 0x11CF340  ; //Potentially Wrong
DWORD ADDYsetfenv = 0x11CFC50  ;
DWORD ADDYsetfield = 0x11CFD20  ;
DWORD ADDYsethook = 0x11CFDD0  ;
DWORD ADDYsetlocal = 0x11DB870  ;
DWORD ADDYsetmetatable = 0xA4C4B0  ; //Potentially Wrong
DWORD ADDYsetreadonly = 0x11CFEE0  ; //Potentially Wrong
DWORD ADDYsettable = 0x11CFFC0  ;
DWORD ADDYsettop = 0x11D0040  ;
DWORD ADDYsetupvalue = 0x11D00C0  ;
DWORD ADDYtoboolean = 0x11D0170  ;
DWORD ADDYtointeger = 0x11D01C0  ;
DWORD ADDYtolstring = 0x11D0240  ;
DWORD ADDYtonumber = 0x11D0370  ;
DWORD ADDYtopointer = 0x11D03F0  ;
DWORD ADDYtostring = 0x11D04B0  ;
DWORD ADDYtothread = 0x11CF410  ; //Potentially Wrong
DWORD ADDYtouserdata = 0x11D0600  ;
DWORD ADDYtype = 0x11D06F0  ;
DWORD ADDYtypename = 0x11D0730  ;
DWORD ADDYxmove = 0x11D0790  ;
DWORD ADDYyield = 0x11D1B60  ;
DWORD ADDYVexecute = 0x11D2320  ;
DWORD ADDYVgettable = 0x11D0170  ; //Potentially Wrong
DWORD ADDYVlessequal = 0x11D01C0  ;
DWORD ADDYVlessthan = 0x11D1510  ;
DWORD ADDYVsettable = 0x11CF920  ; //Potentially Wrong
DWORD ADDYVtonumber = 0x11D96B0  ;
DWORD ADDYVtostring = 0x5F3980  ; //Potentially Wrong
DWORD ADDYSnewlstr = 0x11E2530  ;
DWORD ADDYSnewudata = 0x8AA6A0  ; //Potentially Wrong
DWORD ADDYLaddlstring = 0x11D0880  ;
DWORD ADDYLaddvalue = 0x11D0F80  ;
DWORD ADDYLargerror = 0x11CF100  ; //Potentially Wrong
DWORD ADDYLcheckinteger = 0x6107E0  ; //Potentially Wrong
DWORD ADDYLchecklstring = 0x11D0AC0  ; //Potentially Wrong
DWORD ADDYLchecknumber = 0x11D0AF0  ;
DWORD ADDYLcheckoption = 0xB9B6D0  ; //Potentially Wrong
DWORD ADDYLchecktype = 0x616EC0  ; //Potentially Wrong
DWORD ADDYLerror = 0x11CEA40  ; //Potentially Wrong
DWORD ADDYLfindtable = 0x11D0040  ;
DWORD ADDYLgetmetafield = 0x5FE930  ; //Potentially Wrong
DWORD ADDYLoptinteger = 0x626740  ; //Potentially Wrong
DWORD ADDYLoptlstring = 0x11D0EA0  ; //Potentially Wrong
DWORD ADDYLoptnumber = 0x6345E0  ; //Potentially Wrong
DWORD ADDYLref = 0x71E120  ; //Potentially Wrong
DWORD ADDYLregister = 0x11D10B0  ; //Potentially Wrong
DWORD ADDYLtypename = 0x11D11A0  ;
DWORD ADDYLtyperror = 0x11D1250  ;
DWORD ADDYLunref = 0x11D1290  ;
DWORD ADDYLwhere = 0x11D12F0  ;
deserialize = 0x11D9940  ;
#define CCVatpanic __cdecl
#define CCVcall __cdecl
#define CCVcheckstack __cdecl
#define CCVclose __cdecl
#define CCVconcat __fastcall //Potentially Wrong
#define CCVcreatetable __cdecl //Potentially Wrong
#define CCVerror __cdecl
#define CCVgc __cdecl //Potentially Wrong
#define CCVgetfenv __fastcall //Potentially Wrong
#define CCVgetfield __fastcall //Potentially Wrong
#define CCVgethook __cdecl
#define CCVgetinfo __cdecl
#define CCVgetlocal __cdecl
#define CCVgetmetatable __cdecl //Potentially Wrong
#define CCVgetstack __cdecl
#define CCVgettable __fastcall //Potentially Wrong
#define CCVgettop __cdecl //Potentially Wrong
#define CCVgetupvalue __cdecl
#define CCVinsert __cdecl
#define CCViscfunction __fastcall //Potentially Wrong
#define CCVisstring __cdecl //Potentially Wrong
#define CCVisnumber __fastcall //Potentially Wrong
#define CCVnewstate __cdecl //Potentially Wrong
#define CCVnewthread __cdecl //Potentially Wrong
#define CCVnewuserdata __fastcall //Potentially Wrong
#define CCVnext __fastcall //Potentially Wrong
#define CCVobjlen __cdecl //Potentially Wrong
#define CCVpcall __cdecl
#define CCVpushboolean __cdecl
#define CCVpushcclosure __cdecl
#define CCVpushfstring __cdecl
#define CCVpushinteger __cdecl
#define CCVpushlightuserdata __cdecl
#define CCVpushlstring __cdecl
#define CCVpushnil __cdecl
#define CCVpushnumber __cdecl
#define CCVpushstring __stdcall
#define CCVpushthread __cdecl //Potentially Wrong
#define CCVpushvalue __stdcall
#define CCVpushvfstring __stdcall //Potentially Wrong
#define CCVrawequal __fastcall //Potentially Wrong
#define CCVrawget __cdecl //Potentially Wrong
#define CCVrawgeti __cdecl
#define CCVrawset __cdecl
#define CCVrawseti __cdecl
#define CCVremove __stdcall //Potentially Wrong
#define CCVreplace __fastcall //Potentially Wrong
#define CCVresume __cdecl //Potentially Wrong
#define CCVsetfenv __cdecl
#define CCVsetfield __cdecl
#define CCVsethook __cdecl
#define CCVsetlocal __cdecl
#define CCVsetmetatable __fastcall //Potentially Wrong
#define CCVsetreadonly __cdecl //Potentially Wrong
#define CCVsettable __cdecl
#define CCVsettop __stdcall
#define CCVsetupvalue __cdecl
#define CCVtoboolean __cdecl
#define CCVtointeger __cdecl
#define CCVtolstring __fastcall
#define CCVtonumber __cdecl
#define CCVtopointer __cdecl
#define CCVtostring __cdecl
#define CCVtothread __cdecl //Potentially Wrong
#define CCVtouserdata __cdecl
#define CCVtype __cdecl
#define CCVtypename __cdecl
#define CCVxmove __cdecl
#define CCVyield __cdecl
#define CVCVexecute __cdecl
#define CVCVgettable __cdecl //Potentially Wrong
#define CVCVlessequal __cdecl
#define CVCVlessthan __cdecl
#define CVCVsettable __cdecl //Potentially Wrong
#define CVCVtonumber __cdecl
#define CVCVtostring __fastcall //Potentially Wrong
#define CVCVnewlstr __cdecl
#define CVCVnewudata __fastcall //Potentially Wrong
#define CVCVaddlstring __cdecl
#define CVCVaddvalue __cdecl
#define CVCVargerror __cdecl //Potentially Wrong
#define CVCVcheckinteger __fastcall //Potentially Wrong
#define CVCVchecklstring __cdecl //Potentially Wrong
#define CVCVchecknumber __fastcall
#define CVCVcheckoption __cdecl //Potentially Wrong
#define CVCVchecktype __fastcall //Potentially Wrong
#define CVCVerror __cdecl //Potentially Wrong
#define CVCVfindtable __stdcall
#define CVCVgetmetafield __cdecl //Potentially Wrong
#define CVCVoptinteger __fastcall //Potentially Wrong
#define CVCVoptlstring __cdecl //Potentially Wrong
#define CVCVoptnumber __fastcall //Potentially Wrong
#define CVCVref __fastcall //Potentially Wrong
#define CVCVregister __cdecl //Potentially Wrong
#define CVCVtypename __fastcall
#define CVCVtyperror __fastcall
#define CVCVunref __cdecl
#define CVCVwhere __cdecl
