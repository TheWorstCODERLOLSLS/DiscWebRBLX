#pragma once
#include <Windows.h>
DWORD ADDYatpanic = 0x11C4190  ;
DWORD ADDYcall = 0x11C41C0  ;
DWORD ADDYcheckstack = 0x11C4230  ;
DWORD ADDYclose = 0x11D1110  ;
DWORD ADDYconcat = 0xE8F430  ; //Potentially Wrong
DWORD ADDYcreatetable = 0x11C4380  ; //Potentially Wrong
DWORD ADDYerror = 0x11D4300  ;
DWORD ADDYgc = 0x548780  ; //Potentially Wrong
DWORD ADDYgetfenv = 0x644C50  ; //Potentially Wrong
DWORD ADDYgetfield = 0x11C45C0  ; //Potentially Wrong
DWORD ADDYgethook = 0x11C4670  ;
DWORD ADDYgetinfo = 0x11D1970  ;
DWORD ADDYgetlocal = 0x11D1BC0  ;
DWORD ADDYgetmetatable = 0x11C4670  ; //Potentially Wrong
DWORD ADDYgetstack = 0x11D1C80  ;
DWORD ADDYgettable = 0x654270  ; //Potentially Wrong
DWORD ADDYgettop = 0x11C47A0  ; //Potentially Wrong
DWORD ADDYgetupvalue = 0x11C47C0  ;
DWORD ADDYinsert = 0x11C4860  ;
DWORD ADDYiscfunction = 0x67F0A0  ; //Potentially Wrong
DWORD ADDYisstring = 0x11C49A0  ; //Potentially Wrong
DWORD ADDYisnumber = 0x67F3C0  ; //Potentially Wrong
DWORD ADDYnewstate = 0x720A10  ; //Potentially Wrong
DWORD ADDYnewthread = 0x11C4B50  ; //Potentially Wrong
DWORD ADDYnewuserdata = 0x11C7BA0  ;
DWORD ADDYnext = 0x67F4B0  ; //Potentially Wrong
DWORD ADDYobjlen = 0x11C4CF0  ; //Potentially Wrong
DWORD ADDYpcall = 0x11C4DD0  ;
DWORD ADDYpushboolean = 0x11C4E90  ;
DWORD ADDYpushcclosure = 0x11C4EE0  ;
DWORD ADDYpushfstring = 0x11C4FE0  ;
DWORD ADDYpushinteger = 0x11C5050  ;
DWORD ADDYpushlightuserdata = 0x11C50B0  ;
DWORD ADDYpushlstring = 0x11C5100  ;
DWORD ADDYpushnil = 0x11C5180  ;
DWORD ADDYpushnumber = 0x11C51D0  ;
DWORD ADDYpushstring = 0x11C5230  ;
DWORD ADDYpushthread = 0x11C4230  ; //Potentially Wrong
DWORD ADDYpushvalue = 0x11C53E0  ;
DWORD ADDYpushvfstring = 0xEF4390  ; //Potentially Wrong
DWORD ADDYrawequal = 0x11C68D0  ; //Potentially Wrong
DWORD ADDYrawget = 0x11C5550  ; //Potentially Wrong
DWORD ADDYrawgeti = 0x11C5690  ;
DWORD ADDYrawset = 0x11C5720  ;
DWORD ADDYrawseti = 0x11C5800  ;
DWORD ADDYremove = 0x11C5230  ; //Potentially Wrong
DWORD ADDYreplace = 0x6A3A70  ; //Potentially Wrong
DWORD ADDYresume = 0x11C5100  ; //Potentially Wrong
DWORD ADDYsetfenv = 0x11C5A90  ;
DWORD ADDYsetfield = 0x11C5B60  ;
DWORD ADDYsethook = 0x11C5C10  ;
DWORD ADDYsetlocal = 0x11D1D10  ;
DWORD ADDYsetmetatable = 0xA493D0  ; //Potentially Wrong
DWORD ADDYsetreadonly = 0x11C5D20  ; //Potentially Wrong
DWORD ADDYsettable = 0x11C5E00  ;
DWORD ADDYsettop = 0x11C5E80  ;
DWORD ADDYsetupvalue = 0x11C5F00  ;
DWORD ADDYtoboolean = 0x11C5FE0  ;
DWORD ADDYtointeger = 0x11C6030  ;
DWORD ADDYtolstring = 0x11C60B0  ;
DWORD ADDYtonumber = 0x11C61E0  ;
DWORD ADDYtopointer = 0x11C6260  ;
DWORD ADDYtostring = 0x11C6320  ;
DWORD ADDYtothread = 0x11C63A0  ;
DWORD ADDYtouserdata = 0x11C6470  ;
DWORD ADDYtype = 0x11C6510  ;
DWORD ADDYtypename = 0x11C6550  ;
DWORD ADDYxmove = 0x11C65C0  ;
DWORD ADDYyield = 0x11C7A50  ;
DWORD ADDYVexecute = 0x11C80F0  ;
DWORD ADDYVgettable = 0x11C5FE0  ; //Potentially Wrong
DWORD ADDYVlessequal = 0x11C6030  ;
DWORD ADDYVlessthan = 0x11C7350  ;
DWORD ADDYVsettable = 0x11C5720  ; //Potentially Wrong
DWORD ADDYVtonumber = 0x11D0D20  ;
DWORD ADDYVtostring = 0x5F2D90  ; //Potentially Wrong
DWORD ADDYSnewlstr = 0x11D8AD0  ;
DWORD ADDYSnewudata = 0x11C55E0  ; //Potentially Wrong
DWORD ADDYLaddlstring = 0x11C66C0  ;
DWORD ADDYLaddvalue = 0x11C6DD0  ;
DWORD ADDYLargerror = 0x11C4E90  ; //Potentially Wrong
DWORD ADDYLcheckinteger = 0x60FB90  ; //Potentially Wrong
DWORD ADDYLchecklstring = 0x11C6900  ; //Potentially Wrong
DWORD ADDYLchecknumber = 0x11C6930  ;
DWORD ADDYLcheckoption = 0xB92C80  ; //Potentially Wrong
DWORD ADDYLchecktype = 0x616280  ; //Potentially Wrong
DWORD ADDYLerror = 0x11C47A0  ; //Potentially Wrong
DWORD ADDYLfindtable = 0x11C5E80  ;
DWORD ADDYLgetmetafield = 0x5FDD30  ; //Potentially Wrong
DWORD ADDYLoptinteger = 0x625AC0  ; //Potentially Wrong
DWORD ADDYLoptlstring = 0x11C6CF0  ; //Potentially Wrong
DWORD ADDYLoptnumber = 0x6339B0  ; //Potentially Wrong
DWORD ADDYLref = 0x71D4E0  ; //Potentially Wrong
DWORD ADDYLregister = 0x11C6F00  ; //Potentially Wrong
DWORD ADDYLtypename = 0x11C6FE0  ;
DWORD ADDYLtyperror = 0x11C7090  ;
DWORD ADDYLunref = 0x11C70D0  ;
DWORD ADDYLwhere = 0x11C7130  ;
#define CCVatpanic __cdecl
#define CCVcall __cdecl
#define CCVcheckstack __cdecl
#define CCVclose __cdecl
#define CCVconcat __cdecl //Potentially Wrong
#define CCVcreatetable __cdecl //Potentially Wrong
#define CCVerror __cdecl
#define CCVgc __cdecl //Potentially Wrong
#define CCVgetfenv __fastcall //Potentially Wrong
#define CCVgetfield __cdecl //Potentially Wrong
#define CCVgethook __cdecl
#define CCVgetinfo __cdecl
#define CCVgetlocal __cdecl
#define CCVgetmetatable __cdecl //Potentially Wrong
#define CCVgetstack __cdecl
#define CCVgettable __fastcall //Potentially Wrong
#define CCVgettop __cdecl //Potentially Wrong
#define CCVgetupvalue __cdecl
#define CCVinsert __cdecl
#define CCViscfunction __fastcall //Potentially Wrong
#define CCVisstring __cdecl //Potentially Wrong
#define CCVisnumber __fastcall //Potentially Wrong
#define CCVnewstate __cdecl //Potentially Wrong
#define CCVnewthread __cdecl //Potentially Wrong
#define CCVnewuserdata __cdecl
#define CCVnext __fastcall //Potentially Wrong
#define CCVobjlen __cdecl //Potentially Wrong
#define CCVpcall __cdecl
#define CCVpushboolean __cdecl
#define CCVpushcclosure __stdcall
#define CCVpushfstring __cdecl
#define CCVpushinteger __cdecl
#define CCVpushlightuserdata __cdecl
#define CCVpushlstring __cdecl
#define CCVpushnil __cdecl
#define CCVpushnumber __cdecl
#define CCVpushstring __stdcall
#define CCVpushthread __cdecl //Potentially Wrong
#define CCVpushvalue __stdcall
#define CCVpushvfstring __stdcall //Potentially Wrong
#define CCVrawequal __fastcall //Potentially Wrong
#define CCVrawget __cdecl //Potentially Wrong
#define CCVrawgeti __cdecl
#define CCVrawset __cdecl
#define CCVrawseti __cdecl
#define CCVremove __stdcall //Potentially Wrong
#define CCVreplace __fastcall //Potentially Wrong
#define CCVresume __cdecl //Potentially Wrong
#define CCVsetfenv __cdecl
#define CCVsetfield __stdcall
#define CCVsethook __cdecl
#define CCVsetlocal __cdecl
#define CCVsetmetatable __fastcall //Potentially Wrong
#define CCVsetreadonly __cdecl //Potentially Wrong
#define CCVsettable __cdecl
#define CCVsettop __cdecl
#define CCVsetupvalue __fastcall
#define CCVtoboolean __cdecl
#define CCVtointeger __cdecl
#define CCVtolstring __stdcall
#define CCVtonumber __cdecl
#define CCVtopointer __cdecl
#define CCVtostring __cdecl
#define CCVtothread __cdecl
#define CCVtouserdata __cdecl
#define CCVtype __cdecl
#define CCVtypename __cdecl
#define CCVxmove __cdecl
#define CCVyield __cdecl
#define CVCVexecute __cdecl
#define CVCVgettable __cdecl //Potentially Wrong
#define CVCVlessequal __cdecl
#define CVCVlessthan __cdecl
#define CVCVsettable __cdecl //Potentially Wrong
#define CVCVtonumber __cdecl
#define CVCVtostring __fastcall //Potentially Wrong
#define CVCVnewlstr __cdecl
#define CVCVnewudata __cdecl //Potentially Wrong
#define CVCVaddlstring __cdecl
#define CVCVaddvalue __cdecl
#define CVCVargerror __cdecl //Potentially Wrong
#define CVCVcheckinteger __fastcall //Potentially Wrong
#define CVCVchecklstring __cdecl //Potentially Wrong
#define CVCVchecknumber __fastcall
#define CVCVcheckoption __cdecl //Potentially Wrong
#define CVCVchecktype __fastcall //Potentially Wrong
#define CVCVerror __cdecl //Potentially Wrong
#define CVCVfindtable __cdecl
#define CVCVgetmetafield __cdecl //Potentially Wrong
#define CVCVoptinteger __fastcall //Potentially Wrong
#define CVCVoptlstring __cdecl //Potentially Wrong
#define CVCVoptnumber __fastcall //Potentially Wrong
#define CVCVref __fastcall //Potentially Wrong
#define CVCVregister __cdecl //Potentially Wrong
#define CVCVtypename __cdecl
#define CVCVtyperror __fastcall
#define CVCVunref __cdecl
#define CVCVwhere __cdecl
