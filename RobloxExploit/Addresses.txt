#pragma once
#include <Windows.h>
DWORD ADDYatpanic = 0x11BFC50  ;
DWORD ADDYcall = 0x11BFC80  ;
DWORD ADDYcheckstack = 0x11BFCF0  ;
DWORD ADDYclose = 0x11CCDE0  ;
DWORD ADDYconcat = 0xE8BD50  ; //Potentially Wrong
DWORD ADDYcreatetable = 0x11BFE40  ; //Potentially Wrong
DWORD ADDYerror = 0x11D01A0  ; //Potentially Wrong
DWORD ADDYgc = 0x547950  ; //Potentially Wrong
DWORD ADDYgetfenv = 0x642A30  ; //Potentially Wrong
DWORD ADDYgetfield = 0x11C0080  ; //Potentially Wrong
DWORD ADDYgethook = 0x11C0130  ;
DWORD ADDYgetinfo = 0x11CD680  ;
DWORD ADDYgetlocal = 0x11CD8C0  ;
DWORD ADDYgetmetatable = 0x11C0130  ; //Potentially Wrong
DWORD ADDYgetstack = 0x11CD980  ;
DWORD ADDYgettable = 0x652040  ; //Potentially Wrong
DWORD ADDYgettop = 0x11C0260  ; //Potentially Wrong
DWORD ADDYgetupvalue = 0x11C0280  ;
DWORD ADDYinsert = 0x11C0320  ;
DWORD ADDYiscfunction = 0x67C490  ; //Potentially Wrong
DWORD ADDYisstring = 0x11C0460  ; //Potentially Wrong
DWORD ADDYisnumber = 0x67C7B0  ; //Potentially Wrong
DWORD ADDYnewstate = 0x71E250  ; //Potentially Wrong
DWORD ADDYnewthread = 0x11C0610  ; //Potentially Wrong
DWORD ADDYnewuserdata = 0x11C1B70  ;
DWORD ADDYnext = 0x67C8A0  ; //Potentially Wrong
DWORD ADDYobjlen = 0x11C07B0  ; //Potentially Wrong
DWORD ADDYpcall = 0x11C0890  ;
DWORD ADDYpushboolean = 0x11C0950  ;
DWORD ADDYpushcclosure = 0x11C09A0  ;
DWORD ADDYpushfstring = 0x11C0AA0  ;
DWORD ADDYpushinteger = 0x11C0B10  ;
DWORD ADDYpushlightuserdata = 0x11C0B70  ;
DWORD ADDYpushlstring = 0x11C0BC0  ;
DWORD ADDYpushnil = 0x11C0C40  ;
DWORD ADDYpushnumber = 0x11C0C90  ;
DWORD ADDYpushstring = 0x11C0CF0  ;
DWORD ADDYpushthread = 0x11BFCF0  ; //Potentially Wrong
DWORD ADDYpushvalue = 0x11C0EA0  ;
DWORD ADDYpushvfstring = 0xEF0880  ; //Potentially Wrong
DWORD ADDYrawequal = 0x11C23A0  ; //Potentially Wrong
DWORD ADDYrawget = 0x11C1010  ; //Potentially Wrong
DWORD ADDYrawgeti = 0x11C1150  ;
DWORD ADDYrawset = 0x11C11E0  ;
DWORD ADDYrawseti = 0x11C12C0  ;
DWORD ADDYremove = 0x11C0CF0  ; //Potentially Wrong
DWORD ADDYreplace = 0x6A09D0  ; //Potentially Wrong
DWORD ADDYresume = 0x11C0BC0  ; //Potentially Wrong
DWORD ADDYsetfenv = 0x11C1550  ;
DWORD ADDYsetfield = 0x11C1620  ;
DWORD ADDYsethook = 0x11C16D0  ;
DWORD ADDYsetlocal = 0x11CDA10  ;
DWORD ADDYsetmetatable = 0xA46080  ; //Potentially Wrong
DWORD ADDYsetreadonly = 0x11C17E0  ; //Potentially Wrong
DWORD ADDYsettable = 0x11C18C0  ;
DWORD ADDYsettop = 0x11C1940  ;
DWORD ADDYsetupvalue = 0x11C19C0  ;
DWORD ADDYtoboolean = 0x11C1AA0  ;
DWORD ADDYtointeger = 0x11C1AF0  ;
DWORD ADDYtolstring = 0x11C1B70  ;
DWORD ADDYtonumber = 0x11C1CA0  ;
DWORD ADDYtopointer = 0x11C1D20  ;
DWORD ADDYtostring = 0x11C1DE0  ;
DWORD ADDYtothread = 0x11C1E60  ;
DWORD ADDYtouserdata = 0x11C1F30  ;
DWORD ADDYtype = 0x11C1FD0  ;
DWORD ADDYtypename = 0x11C2010  ;
DWORD ADDYxmove = 0x11C2080  ;
DWORD ADDYyield = 0x11C3560  ;
DWORD ADDYVexecute = 0x11C09A0  ;
DWORD ADDYVgettable = 0x11C1AA0  ;
DWORD ADDYVlessequal = 0x11C1AF0  ;
DWORD ADDYVsettable = 0x11C11E0  ; //Potentially Wrong
DWORD ADDYVtonumber = 0x11C12C0  ;
DWORD ADDYVtostring = 0x5F2430  ; //Potentially Wrong
DWORD ADDYSnewlstr = 0x11D4770  ;
DWORD ADDYSnewudata = 0x11C10A0  ; //Potentially Wrong
DWORD ADDYLaddlstring = 0x11C2180  ;
DWORD ADDYLaddvalue = 0x11C28B0  ;
DWORD ADDYLargerror = 0x11C0950  ; //Potentially Wrong
DWORD ADDYLcheckinteger = 0x60F720  ; //Potentially Wrong
DWORD ADDYLchecklstring = 0x11C23D0  ; //Potentially Wrong
DWORD ADDYLchecknumber = 0x11C2400  ;
DWORD ADDYLcheckoption = 0xB86950  ; //Potentially Wrong
DWORD ADDYLchecktype = 0x615E00  ; //Potentially Wrong
DWORD ADDYLerror = 0x11C0260  ; //Potentially Wrong
DWORD ADDYLfindtable = 0x11C1940  ;
DWORD ADDYLgetmetafield = 0x5FD3E0  ; //Potentially Wrong
DWORD ADDYLoptinteger = 0x6245D0  ; //Potentially Wrong
DWORD ADDYLoptlstring = 0x11C27D0  ; //Potentially Wrong
DWORD ADDYLoptnumber = 0x6317B0  ; //Potentially Wrong
DWORD ADDYLref = 0x71ACE0  ; //Potentially Wrong
DWORD ADDYLregister = 0x11C29F0  ; //Potentially Wrong
DWORD ADDYLtypename = 0x11C2AE0  ;
DWORD ADDYLtyperror = 0x11C2B90  ;
DWORD ADDYLunref = 0x11C2BD0  ;
DWORD ADDYLwhere = 0x11C2C30  ;
#define CCVatpanic __cdecl
#define CCVcall __cdecl
#define CCVcheckstack __cdecl
#define CCVclose __cdecl
#define CCVconcat __cdecl //Potentially Wrong
#define CCVcreatetable __cdecl //Potentially Wrong
#define CCVerror __cdecl //Potentially Wrong
#define CCVgc __cdecl //Potentially Wrong
#define CCVgetfenv __fastcall //Potentially Wrong
#define CCVgetfield __cdecl //Potentially Wrong
#define CCVgethook __cdecl
#define CCVgetinfo __cdecl
#define CCVgetlocal __cdecl
#define CCVgetmetatable __cdecl //Potentially Wrong
#define CCVgetstack __cdecl
#define CCVgettable __fastcall //Potentially Wrong
#define CCVgettop __cdecl //Potentially Wrong
#define CCVgetupvalue __cdecl
#define CCVinsert __cdecl
#define CCViscfunction __fastcall //Potentially Wrong
#define CCVisstring __cdecl //Potentially Wrong
#define CCVisnumber __fastcall //Potentially Wrong
#define CCVnewstate __cdecl //Potentially Wrong
#define CCVnewthread __cdecl //Potentially Wrong
#define CCVnewuserdata __fastcall
#define CCVnext __fastcall //Potentially Wrong
#define CCVobjlen __cdecl //Potentially Wrong
#define CCVpcall __cdecl
#define CCVpushboolean __cdecl
#define CCVpushcclosure __stdcall
#define CCVpushfstring __cdecl
#define CCVpushinteger __cdecl
#define CCVpushlightuserdata __cdecl
#define CCVpushlstring __cdecl
#define CCVpushnil __cdecl
#define CCVpushnumber __fastcall
#define CCVpushstring __cdecl
#define CCVpushthread __cdecl //Potentially Wrong
#define CCVpushvalue __fastcall
#define CCVpushvfstring __stdcall //Potentially Wrong
#define CCVrawequal __fastcall //Potentially Wrong
#define CCVrawget __cdecl //Potentially Wrong
#define CCVrawgeti __cdecl
#define CCVrawset __cdecl
#define CCVrawseti __cdecl
#define CCVremove __cdecl //Potentially Wrong
#define CCVreplace __fastcall //Potentially Wrong
#define CCVresume __cdecl //Potentially Wrong
#define CCVsetfenv __cdecl
#define CCVsetfield __cdecl
#define CCVsethook __cdecl
#define CCVsetlocal __cdecl
#define CCVsetmetatable __fastcall //Potentially Wrong
#define CCVsetreadonly __cdecl //Potentially Wrong
#define CCVsettable __cdecl
#define CCVsettop __fastcall
#define CCVsetupvalue __fastcall
#define CCVtoboolean __cdecl
#define CCVtointeger __cdecl
#define CCVtolstring __fastcall
#define CCVtonumber __cdecl
#define CCVtopointer __cdecl
#define CCVtostring __cdecl
#define CCVtothread __cdecl
#define CCVtouserdata __cdecl
#define CCVtype __cdecl
#define CCVtypename __cdecl
#define CCVxmove __cdecl
#define CCVyield __cdecl
#define CVCVexecute __stdcall
#define CVCVgettable __cdecl
#define CVCVlessequal __cdecl
#define CVCVsettable __cdecl //Potentially Wrong
#define CVCVtonumber __cdecl
#define CVCVtostring __fastcall //Potentially Wrong
#define CVCVnewlstr __cdecl
#define CVCVnewudata __cdecl //Potentially Wrong
#define CVCVaddlstring __cdecl
#define CVCVaddvalue __cdecl
#define CVCVargerror __cdecl //Potentially Wrong
#define CVCVcheckinteger __fastcall //Potentially Wrong
#define CVCVchecklstring __cdecl //Potentially Wrong
#define CVCVchecknumber __fastcall
#define CVCVcheckoption __cdecl //Potentially Wrong
#define CVCVchecktype __fastcall //Potentially Wrong
#define CVCVerror __cdecl //Potentially Wrong
#define CVCVfindtable __fastcall
#define CVCVgetmetafield __cdecl //Potentially Wrong
#define CVCVoptinteger __fastcall //Potentially Wrong
#define CVCVoptlstring __cdecl //Potentially Wrong
#define CVCVoptnumber __fastcall //Potentially Wrong
#define CVCVref __fastcall //Potentially Wrong
#define CVCVregister __cdecl //Potentially Wrong
#define CVCVtypename __fastcall
#define CVCVtyperror __fastcall
#define CVCVunref __cdecl
#define CVCVwhere __cdecl
